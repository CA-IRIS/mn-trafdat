<?xml version="1.0"?>

<!-- ================================================== -->
<!-- DataServer build file   -->
<!-- ================================================== -->

<project name="trafdat" default="war" basedir=".">
	<property file="project.properties"/>
    <property file="${user.home}/.ant.properties"/>
    <property name="src.dir" value="src" />
    <property name="etc.dir" value="etc" />
    <property name="lib.dir" value="lib" />

	<property name="build.dir" value="build" />
	<property name="build.webapp.dir" value="build/webapp" />
    <property name="build.src.dir" value="${build.dir}/src" />
    <property name="build.etc.dir" value="${build.dir}/etc" />
    <property name="build.web.dir" value="${build.dir}/web" />
    <property name="build.lib.dir" value="${build.dir}/lib" />
    <property name="build.classes.dir" value="${build.dir}/classes" />
	<property name="build.javadocs.dir" value="${build.dir}/javadocs" />

    <property name="userdocs.dir" value="${name}" />
    <property name="webxml" value="etc/web.xml" />
    <property name="build.compiler.pedantic" value="true"/>
	<path id="classpath">
		<fileset dir = "${lib.dir}" includes="**/*.jar"/>
	</path>

	<!-- Check for one jar dependancy -->
	<target name="check-jar">
		<available property="jar.exists"
			   file="${lib.dir}/${file.jar}"/>
		<echo message="Checking for ${lib.dir}/${file.jar}"/>
		<fail unless="jar.exists"
		      message="Missing dependency: ${lib.dir}/${file.jar}"/>
	</target>

	<!-- Check for dependancies -->
	<target name="check">
		<antcall target="check-jar">
			<param name="file.jar" value="servlet-api.jar"/>
		</antcall>
	</target>

	<!-- =================================================== -->
	<!-- Prepares the directory structure-->
	<!-- =================================================== -->
	<target name="prepare"
	        description="Prepare the build directory">

		<mkdir dir="${build.src.dir}" />
		<mkdir dir="${build.classes.dir}" />
		<mkdir dir="${build.lib.dir}" />

		<copy todir="${build.src.dir}" filtering="true">
			<fileset dir="${src.dir}"/>
			<filterset begintoken="@@" endtoken="@@">
				<filter token="VERSION" value="${version}"/>
			</filterset>
		</copy>
	</target>

	<!-- =================================================== -->
	<!-- Compiles the source code-->
	<!-- =================================================== -->
	<target name="compile"
		depends="check, prepare"
		description="Compiles all of the source files for the project.">
		<javac destdir="${build.classes.dir}"
			debug="on"
			deprecation="on"
			optimize="on"
			target="1.5">
			<src path="${build.src.dir}"/>
			<classpath refid="classpath" />
		</javac>
	</target>

<!-- ================================================== -->
<!-- Create the server war.   -->
<!-- ================================================== -->
	<target name="war"
		depends="compile"
		description="Creates the war file.">
		<copy todir="${build.webapp.dir}/WEB-INF/classes">
			<fileset dir="${build.classes.dir}"/>
		</copy>
		<war
			destfile="${build.lib.dir}/${name}-${version}.war"
			webxml="${webxml}"
			basedir="${build.webapp.dir}">
		</war>
	</target>

	<!-- =================================================== -->
	<!-- Creates the API documentation   -->
	<!-- =================================================== -->
		<target name="javadocs"
			depends="prepare"
			description="Creates the javadocs for the project.">
			<javadoc packagenames="${packages}"
				classpathref="classpath"
				sourcepath="${src.dir}"
				destdir="${build.javadocs}"
				author="true"
				version="true"
				windowtitle="${name} API"
				doctitle="${name}-${version}"
				bottom="Copyright &#169; Minnesota Department of
				Transportation. All Rights Reserved."/>
		</target>

	<!-- ================================================== -->
	<!-- Cleans up generated stuff   -->
	<!-- ================================================== -->
		<target name="clean"
			description="deletes build directory.">
			<delete dir="${build.dir}"/>
		</target>

</project>